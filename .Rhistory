use_r("ibd_an")
library(devtools)
use_r("ibd_an")
load_all()
load("~/Dropbox/Incomplete block designs/R code/BIBD_n14.RData")
data.obs.alt
K
temp <- data.obs.alt
temp$w <- rep(1,K)/K
temp
data.obs.wide <- data.obs.alt %>% tidyr::pivot_wider(names_from = assign,
values_from = c(mean, s2))
library(ggplot2)
library(tidyr)
data.obs.wide <- data.obs.alt %>% tidyr::pivot_wider(names_from = assign,
values_from = c(mean, s2))
data.obs.wide
#######################
### Point Estimator ###
#######################
data.obs.alt <- data %>% group_by(blk_id, assign) %>%
summarise(mean = mean(Y.obs),
s2 = var(Y.obs),
n_kt = n())
library(dplyr)
#data <- data.frame(Y.obs,blk_id = as.factor(blk_id), assign = as.factor(assign))
data <- data.frame(Y.obs,blk_id = as.factor(blk_id), assign = assign)
#data <- data.frame(Y.obs,blk_id = as.factor(blk_id), assign = as.factor(assign))
data <- data.frame(Y.obs,blk_id = as.factor(blk.id), assign = assign)
#data <- data.frame(Y.obs,blk_id = as.factor(blk_id), assign = as.factor(assign))
data <- data.frame(Y.obs,blk_id = as.factor(blk.id), assign = assign.vec)
K <- length(unique(data$blk_id))
trt.set <- unique(data$assign) # {1,...,T}
n.trt <- length(unique(data$assign)) # T
data.sum <- data %>%
group_by(blk_id) %>%
summarise(t = length(unique(assign)), n.vec = length(Y.obs), R_k = list(unique(assign)))
t <- data.sum$t[1] # t is constant over block.
n.vec <- data.sum$n.vec # n_k
R_k <- matrix(as.numeric(unlist(data.sum$R_k)),ncol = t,byrow = T)
R_k.table <- t(apply(R_k, 1, function(x) table(factor(x,  unique(c(R_k))))))
R_k.table <- R_k.table[ , order(colnames(R_k.table))]
L <- apply(R_k.table,2,sum) # L_z
l <- t(R_k.table)%*%R_k.table # l_{z,z'}
data.obs.alt <- data %>% group_by(blk_id, assign) %>%
summarise(mean = mean(Y.obs),
s2 = var(Y.obs),
n_kt = n())
data.obs.alt <- data.obs.alt %>% group_by(blk_id) %>%
mutate(block.mean = mean(mean),
n_k = sum(n_kt))
data.obs.wide <- data.obs.alt %>% tidyr::pivot_wider(names_from = assign,
values_from = c(mean, s2))
data.obs.wide
yestk <- data.obs.wide[, grepl( "mean_" , names( data.obs.wide ) )]
yestk
yestk <- yestk[ , order(names(yestk))]
yestk$w <- rep(1,K)/K
yestk
colSums(yestk)
colSums(yestk,na.rm = T)
colSums(yestk*rep(1,K)/K,na.rm = T)
colMeans(yestk,na.rm = T)
yestk <- data.obs.wide[, grepl( "mean_" , names( data.obs.wide ) )]
sweep(yestk, 2, rep(1,K)/K, '*')
sweep(yestk, 1, rep(1,K)/K, '*')
colSums(sweep(yestk, 1, rep(1,K)/K, '*'))
colSums(sweep(yestk, 1, rep(1,K)/K, '*'),na.rm = T)
colMeans(yestk,na.rm = T)
yestk <- yestk[ , order(names(yestk))]
colMeans(sweep(yestk, 1, rep(1,K)/K, '*'),na.rm = T)
colSums(sweep(yestk, 1, rep(1,K)/K, '*'),na.rm = T)
colMeans(yestk,na.rm = T)
colSums(sweep(yestk, 1, rep(1,K), '*'),na.rm = T)
colMeans(sweep(yestk, 1, rep(1,K), '*'),na.rm = T)
colMeans(yestk,na.rm = T)
colMeans(yestk,na.rm = T)
colMeans(sweep(yestk, 1, K*w, '*'),na.rm = T)
colMeans(sweep(yestk, 1, rep(1,K), '*'),na.rm = T)
(sweep(yestk, 1, rep(1,K), '*')
)
!is.na(sweep(yestk, 1, rep(1,K), '*'))
!is.na(sweep(yestk, 1, rep(1,K), '*'))
colMeans(!is.na(sweep(yestk, 1, rep(1,K), '*')),na.rm=T)
one_ht <- colMeans(!is.na(sweep(yestk, 1, K*w, '*')),na.rm=T)
one_ht <- colMeans(!is.na(sweep(yestk, 1, rep(1,K), '*')),na.rm=T)
yhaj <- yht/one_ht
yht <- colMeans(sweep(yestk, 1, rep(1,K), '*'),na.rm = T) # The Horvitz-Thompson estimator
yhaj <- yht/one_ht
yhaj
yht
!is.na(sweep(yestk, 1, K*w, '*'))
!is.na(sweep(yestk, 1, rep(1,K), '*'))
colSums(!is.na(sweep(yestk, 1, rep(1,K), '*')))
L
colSums(!is.na(sweep(yestk, 1, rep(1,K), '*')))/L
one_ht <- colSums(!is.na(sweep(yestk, 1, rep(1,K), '*')))/L
yhaj <- yht/one_ht
data.obs.wide
data.obs.wide <- data.obs.alt %>% tidyr::pivot_wider(names_from = assign,
values_from = c(mean, s2))
data.obs.wide
data.obs.alt
yestk
# The Horvitz-Thompson estimator
w <- rep(1,K)/K
yestk
sweep(yestk, 1, K*w, '*')
Kw_yestk <- sweep(yestk, 1, K*w, '*')
Kw_yestk
s_ht <- sapply(Kw_yestk, function(x){var(x,na.rm = T)})
s_ht
s_bb <- sapply(yestk, function(x){var(x,na.rm = T)})
s_bb
yestk
sweep(yestk,1,yhaj,'-')
sweep(yestk, 1, K*w, '*')
!is.na(sweep(yestk, 1, K*w, '*'))
##########################
### Variance Estimator ###
##########################
# Within-block component #
s_k <- data.obs.wide[, grepl( "s2_" , names( data.obs.wide ) )]
s_k
s_k <- s_k[ , order(names(s_k))]
s_k
K*w
sweep(s_k,1,K*w,'*')
# Hajek #
sweep(yestk,2,yhaj,'-')
# Hajek #
sweep(yestk,1,yhaj,'-')
# Hajek #
yhaj_center <- sweep(yestk,2,yhaj,'-')
yhaj_center
Kwyhaj_center <- sweep(yhaj_center,1,K*w,'*')
s_haj <- sapply(Kwyhaj_center, function(x){var(x,na.rm = T)})
s_haj
s_ht
s_haj <- sapply(Kwyhaj_center, function(x){mean(x^2,na.rm = T)})
s_haj
